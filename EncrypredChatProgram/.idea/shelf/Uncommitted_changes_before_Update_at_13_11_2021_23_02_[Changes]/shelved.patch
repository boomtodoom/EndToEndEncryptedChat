Index: src/BackEnd.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.IOException;\r\nimport java.net.InetAddress;\r\nimport java.net.ServerSocket;\r\nimport java.net.Socket;\r\nimport java.net.UnknownHostException;\r\nimport java.util.ArrayList;\r\nimport java.util.Scanner;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\npublic class BackEnd {\r\n  private ArrayList<Socket> sockArray = new ArrayList<>();\r\n  private ArrayList<Send> senderArray = new ArrayList<>();\r\n  private ArrayList<Receive> receiverArray = new ArrayList<>();\r\n\r\n  public static void main(String[] args) throws IOException {\r\n    BackEnd back = new BackEnd();\r\n    back.initialise();\r\n  }\r\n\r\n  public void initialise() throws IOException {\r\n    /**\r\n     * Gets the port and ip of the client to connect to and then creates a socket\r\n     */\r\n    Scanner scan = new Scanner(System.in);\r\n    System.out.println(\"Please enter the ip you wish to connect to: \");\r\n    String ip = scan.nextLine();\r\n    InetAddress iAddress = InetAddress.getByName(ip);\r\n    System.out.println(\"Please enter the port you wish to connect to: \");\r\n    int port = scan.nextInt();\r\n    Socket socket = new Socket(iAddress, port);\r\n    sockArray.add(socket);\r\n    /**\r\n     * Starts a thread that creates new sockets every time a user connects to this client\r\n     */\r\n    System.out.println(\"Please enter a port you want open\");\r\n    int openPort = scan.nextInt();\r\n    ServerSocket sSoc = new ServerSocket(openPort);\r\n    ListenSocCraft lSoc = new ListenSocCraft(sSoc,sockArray,senderArray); //add server socket\r\n    lSoc.start();\r\n\r\n    Timer timer = new Timer();\r\n    timer.schedule(new TimerTask() {\r\n      @Override\r\n      public void run() {\r\n\r\n      }\r\n    },0,1000);\r\n\r\n    /**\r\n     * Loops infinitely checking for the users message and then sending them to all connected clients\r\n     */\r\n    while(true){\r\n      System.out.println(\"Please enter the message: \");\r\n      String message = scan.nextLine();\r\n      for(int i=0; i<senderArray.size();i++){\r\n        senderArray.get(i).send(message);\r\n      }\r\n    }\r\n    /**\r\n     *\r\n     */\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/BackEnd.java b/src/BackEnd.java
--- a/src/BackEnd.java	(revision 880c4bf95baf010bbb9e70ffe8163f1a2c5cd41f)
+++ b/src/BackEnd.java	(date 1636835211832)
@@ -43,7 +43,9 @@
     timer.schedule(new TimerTask() {
       @Override
       public void run() {
-
+        sockArray=lSoc.getSocketArray();
+        senderArray=lSoc.getSendArray();
+        receiverArray=lSoc.getRecArray();
       }
     },0,1000);
 
